/**
 * vrm_types - VRM types generated by vrm_type_generator
 *
 * Distributed under the MIT License, see notice at the end of this file.
 *
 */

#ifndef CGLTF_VRM_TYPES_V0_0_H_INCLUDED__
#define CGLTF_VRM_TYPES_V0_0_H_INCLUDED__

#ifdef __cplusplus
extern "C" {
#endif

typedef enum cgltf_vrm_blendshape_group_presetName_v0_0 {
	cgltf_vrm_blendshape_group_presetName_v0_0_unknown,
	cgltf_vrm_blendshape_group_presetName_v0_0_neutral,
	cgltf_vrm_blendshape_group_presetName_v0_0_a,
	cgltf_vrm_blendshape_group_presetName_v0_0_i,
	cgltf_vrm_blendshape_group_presetName_v0_0_u,
	cgltf_vrm_blendshape_group_presetName_v0_0_e,
	cgltf_vrm_blendshape_group_presetName_v0_0_o,
	cgltf_vrm_blendshape_group_presetName_v0_0_blink,
	cgltf_vrm_blendshape_group_presetName_v0_0_joy,
	cgltf_vrm_blendshape_group_presetName_v0_0_angry,
	cgltf_vrm_blendshape_group_presetName_v0_0_sorrow,
	cgltf_vrm_blendshape_group_presetName_v0_0_fun,
	cgltf_vrm_blendshape_group_presetName_v0_0_lookup,
	cgltf_vrm_blendshape_group_presetName_v0_0_lookdown,
	cgltf_vrm_blendshape_group_presetName_v0_0_lookleft,
	cgltf_vrm_blendshape_group_presetName_v0_0_lookright,
	cgltf_vrm_blendshape_group_presetName_v0_0_blink_l,
	cgltf_vrm_blendshape_group_presetName_v0_0_blink_r,
} cgltf_vrm_blendshape_group_presetName_v0_0;

typedef enum cgltf_vrm_firstperson_lookAtTypeName_v0_0 {
	cgltf_vrm_firstperson_lookAtTypeName_v0_0_Bone,
	cgltf_vrm_firstperson_lookAtTypeName_v0_0_BlendShape,
} cgltf_vrm_firstperson_lookAtTypeName_v0_0;

typedef enum cgltf_vrm_humanoid_bone_bone_v0_0 {
	cgltf_vrm_humanoid_bone_bone_v0_0_hips,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftUpperLeg,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightUpperLeg,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftLowerLeg,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightLowerLeg,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftFoot,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightFoot,
	cgltf_vrm_humanoid_bone_bone_v0_0_spine,
	cgltf_vrm_humanoid_bone_bone_v0_0_chest,
	cgltf_vrm_humanoid_bone_bone_v0_0_neck,
	cgltf_vrm_humanoid_bone_bone_v0_0_head,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftShoulder,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightShoulder,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftUpperArm,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightUpperArm,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftLowerArm,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightLowerArm,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftHand,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightHand,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftToes,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightToes,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftEye,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightEye,
	cgltf_vrm_humanoid_bone_bone_v0_0_jaw,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftThumbProximal,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftThumbIntermediate,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftThumbDistal,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftIndexProximal,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftIndexIntermediate,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftIndexDistal,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftMiddleProximal,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftMiddleIntermediate,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftMiddleDistal,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftRingProximal,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftRingIntermediate,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftRingDistal,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftLittleProximal,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftLittleIntermediate,
	cgltf_vrm_humanoid_bone_bone_v0_0_leftLittleDistal,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightThumbProximal,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightThumbIntermediate,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightThumbDistal,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightIndexProximal,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightIndexIntermediate,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightIndexDistal,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightMiddleProximal,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightMiddleIntermediate,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightMiddleDistal,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightRingProximal,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightRingIntermediate,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightRingDistal,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightLittleProximal,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightLittleIntermediate,
	cgltf_vrm_humanoid_bone_bone_v0_0_rightLittleDistal,
	cgltf_vrm_humanoid_bone_bone_v0_0_upperChest,
} cgltf_vrm_humanoid_bone_bone_v0_0;

typedef enum cgltf_vrm_meta_allowedUserName_v0_0 {
	cgltf_vrm_meta_allowedUserName_v0_0_OnlyAuthor,
	cgltf_vrm_meta_allowedUserName_v0_0_ExplicitlyLicensedPerson,
	cgltf_vrm_meta_allowedUserName_v0_0_Everyone,
} cgltf_vrm_meta_allowedUserName_v0_0;

typedef enum cgltf_vrm_meta_violentUssageName_v0_0 {
	cgltf_vrm_meta_violentUssageName_v0_0_Disallow,
	cgltf_vrm_meta_violentUssageName_v0_0_Allow,
} cgltf_vrm_meta_violentUssageName_v0_0;

typedef enum cgltf_vrm_meta_sexualUssageName_v0_0 {
	cgltf_vrm_meta_sexualUssageName_v0_0_Disallow,
	cgltf_vrm_meta_sexualUssageName_v0_0_Allow,
} cgltf_vrm_meta_sexualUssageName_v0_0;

typedef enum cgltf_vrm_meta_commercialUssageName_v0_0 {
	cgltf_vrm_meta_commercialUssageName_v0_0_Disallow,
	cgltf_vrm_meta_commercialUssageName_v0_0_Allow,
} cgltf_vrm_meta_commercialUssageName_v0_0;

typedef enum cgltf_vrm_meta_licenseName_v0_0 {
	cgltf_vrm_meta_licenseName_v0_0_Redistribution_Prohibited,
	cgltf_vrm_meta_licenseName_v0_0_CC0,
	cgltf_vrm_meta_licenseName_v0_0_CC_BY,
	cgltf_vrm_meta_licenseName_v0_0_CC_BY_NC,
	cgltf_vrm_meta_licenseName_v0_0_CC_BY_SA,
	cgltf_vrm_meta_licenseName_v0_0_CC_BY_NC_SA,
	cgltf_vrm_meta_licenseName_v0_0_CC_BY_ND,
	cgltf_vrm_meta_licenseName_v0_0_CC_BY_NC_ND,
	cgltf_vrm_meta_licenseName_v0_0_Other,
} cgltf_vrm_meta_licenseName_v0_0;
typedef struct cgltf_vrm_secondaryanimation_collidergroup_colliders_v0_0 {
	cgltf_float* offset; // [x, y, z]
	cgltf_size offset_count;
	cgltf_float radius;
} cgltf_vrm_secondaryanimation_collidergroup_colliders_v0_0;
typedef struct cgltf_vrm_secondaryanimation_spring_v0_0 {
	char* comment;
	cgltf_float stiffiness;
	cgltf_float gravityPower;
	cgltf_float* gravityDir; // [x, y, z]
	cgltf_size gravityDir_count;
	cgltf_float dragForce;
	cgltf_int center;
	cgltf_float hitRadius;
	cgltf_int* bones;
	cgltf_size bones_count;
	cgltf_int* colliderGroups;
	cgltf_size colliderGroups_count;
} cgltf_vrm_secondaryanimation_spring_v0_0;

typedef struct cgltf_vrm_secondaryanimation_collidergroup_v0_0 {
	cgltf_int node;
	cgltf_vrm_secondaryanimation_collidergroup_colliders_v0_0* colliders;
	cgltf_size colliders_count;
} cgltf_vrm_secondaryanimation_collidergroup_v0_0;

typedef struct cgltf_vrm_secondaryanimation_v0_0 {
	cgltf_vrm_secondaryanimation_spring_v0_0* boneGroups;
	cgltf_size boneGroups_count;
	cgltf_vrm_secondaryanimation_collidergroup_v0_0* colliderGroups;
	cgltf_size colliderGroups_count;
} cgltf_vrm_secondaryanimation_v0_0;

typedef struct cgltf_vrm_blendshape_bind_v0_0 {
	cgltf_int mesh;
	cgltf_int index;
	cgltf_float weight;
} cgltf_vrm_blendshape_bind_v0_0;

typedef struct cgltf_vrm_blendshape_materialbind_v0_0 {
	char* materialName;
	char* propertyName;
	cgltf_float* targetValue;
	cgltf_size targetValue_count;
} cgltf_vrm_blendshape_materialbind_v0_0;

typedef struct cgltf_vrm_blendshape_group_v0_0 {
	char* name;
	cgltf_vrm_blendshape_group_presetName_v0_0 presetName;
	cgltf_vrm_blendshape_bind_v0_0* binds;
	cgltf_size binds_count;
	cgltf_vrm_blendshape_materialbind_v0_0* materialValues;
	cgltf_size materialValues_count;
	cgltf_bool isBinary;
} cgltf_vrm_blendshape_group_v0_0;

typedef struct cgltf_vrm_blendshape_v0_0 {
	cgltf_vrm_blendshape_group_v0_0* blendShapeGroups;
	cgltf_size blendShapeGroups_count;
} cgltf_vrm_blendshape_v0_0;

typedef struct cgltf_vrm_firstperson_degreemap_v0_0 {
	cgltf_float* curve;
	cgltf_size curve_count;
	cgltf_float xRange;
	cgltf_float yRange;
} cgltf_vrm_firstperson_degreemap_v0_0;

typedef struct cgltf_vrm_firstperson_meshannotation_v0_0 {
	cgltf_int mesh;
	char* firstPersonFlag;
} cgltf_vrm_firstperson_meshannotation_v0_0;

typedef struct cgltf_vrm_firstperson_v0_0 {
	cgltf_int firstPersonBone;
	cgltf_float* firstPersonBoneOffset; // [x, y, z]
	cgltf_size firstPersonBoneOffset_count;
	cgltf_vrm_firstperson_meshannotation_v0_0* meshAnnotations;
	cgltf_size meshAnnotations_count;
	cgltf_vrm_firstperson_lookAtTypeName_v0_0 lookAtTypeName;
	cgltf_vrm_firstperson_degreemap_v0_0 lookAtHorizontalInner;
	cgltf_vrm_firstperson_degreemap_v0_0 lookAtHorizontalOuter;
	cgltf_vrm_firstperson_degreemap_v0_0 lookAtVerticalDown;
	cgltf_vrm_firstperson_degreemap_v0_0 lookAtVerticalUp;
} cgltf_vrm_firstperson_v0_0;

typedef struct cgltf_vrm_humanoid_bone_v0_0 {
	cgltf_vrm_humanoid_bone_bone_v0_0 bone;
	cgltf_int node;
	cgltf_bool useDefaultValues;
	cgltf_float* min; // [x, y, z]
	cgltf_size min_count;
	cgltf_float* max; // [x, y, z]
	cgltf_size max_count;
	cgltf_float* center; // [x, y, z]
	cgltf_size center_count;
	cgltf_float axisLength;
} cgltf_vrm_humanoid_bone_v0_0;

typedef struct cgltf_vrm_humanoid_v0_0 {
	cgltf_vrm_humanoid_bone_v0_0* humanBones;
	cgltf_size humanBones_count;
	cgltf_float armStretch;
	cgltf_float legStretch;
	cgltf_float upperArmTwist;
	cgltf_float lowerArmTwist;
	cgltf_float upperLegTwist;
	cgltf_float lowerLegTwist;
	cgltf_float feetSpacing;
	cgltf_bool hasTranslationDoF;
} cgltf_vrm_humanoid_v0_0;

typedef struct cgltf_vrm_material_v0_0 {
	char* name;
	char* shader;
	cgltf_int renderQueue;
	char** floatProperties_keys;
	cgltf_float* floatProperties_values;
	cgltf_size floatProperties_count;
	char** vectorProperties_keys;
	cgltf_float** vectorProperties_values;
	cgltf_size vectorProperties_count;
	cgltf_size* vectorProperties_floats_size;
	char** textureProperties_keys;
	cgltf_int* textureProperties_values;
	cgltf_size textureProperties_count;
	char** keywordMap_keys;
	cgltf_bool* keywordMap_values;
	cgltf_size keywordMap_count;
	char** tagMap_keys;
	char** tagMap_values;
	cgltf_size tagMap_count;
} cgltf_vrm_material_v0_0;

typedef struct cgltf_vrm_meta_v0_0 {
	char* title;
	char* version;
	char* author;
	char* contactInformation;
	char* reference;
	cgltf_int texture;
	cgltf_vrm_meta_allowedUserName_v0_0 allowedUserName;
	cgltf_vrm_meta_violentUssageName_v0_0 violentUssageName;
	cgltf_vrm_meta_sexualUssageName_v0_0 sexualUssageName;
	cgltf_vrm_meta_commercialUssageName_v0_0 commercialUssageName;
	char* otherPermissionUrl;
	cgltf_vrm_meta_licenseName_v0_0 licenseName;
	char* otherLicenseUrl;
} cgltf_vrm_meta_v0_0;

typedef struct cgltf_vrm_v0_0 {
	char* exporterVersion;
	char* specVersion;
	cgltf_vrm_meta_v0_0 meta;
	cgltf_vrm_humanoid_v0_0 humanoid;
	cgltf_vrm_firstperson_v0_0 firstPerson;
	cgltf_vrm_blendshape_v0_0 blendShapeMaster;
	cgltf_vrm_secondaryanimation_v0_0 secondaryAnimation;
	cgltf_vrm_material_v0_0* materialProperties;
	cgltf_size materialProperties_count;
} cgltf_vrm_v0_0;

#ifdef __cplusplus
}
#endif

#endif /* #ifndef CGLTF_VRM_TYPES_V0_0_H_INCLUDED__ */

/* vrm_types is distributed under MIT license:
 *
 * Copyright (c) 2020 Kota Iguchi
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
